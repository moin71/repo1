/****** Object:  StoredProcedure [DATAMARTS_CORPORATE].[EDWH_TO_DM_CORP_MOVEMENT]    Script Date: 18/11/2023 13:03:53 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROC [DATAMARTS_CORPORATE].[EDWH_TO_DM_CORP_MOVEMENT] AS
  DECLARE 

@v_CURRENTDATE datetime2,
@v_FIRSTPERIOD datetime2,
@v_SECONDPERIOD datetime2,
@v_OPENINGFIRSTPERIOD datetime2,
@v_OPENINGSECONDPERIOD datetime2,
@v_CLOSINGFIRSTPERIOD datetime2,
@v_CLOSINGSECONDPERIOD datetime2;
DECLARE @UAEDATE datetime2; 

BEGIN
SET @UAEDATE = (SELECT  udo.GETDATE(GETDATE(),(SELECT [TIME_ADJUSTMENT] FROM [udo].[TIME_CONFIG] WHERE
[DATE] = CAST(GETDATE() AS DATE)))) ;
SET @v_CURRENTDATE=  DATEADD(D,DATEDIFF(D,0,CAST(@UAEDATE AS DATE)),0);
SET @v_SECONDPERIOD= DATEADD(MONTH, DATEDIFF(MONTH, 0,@v_CURRENTDATE), 0) --dbo.DATE_TRUNC('MONTH',v_CURRENTDATE);
SET @v_FIRSTPERIOD= DATEADD(MONTH,-1,@v_SECONDPERIOD)--v_SECONDPERIOD - 1 * INTERVAL '1 MONTH';
SET @v_OPENINGSECONDPERIOD= DATEADD(DD,-1,@v_SECONDPERIOD)--v_SECONDPERIOD - 1;
SET @v_OPENINGFIRSTPERIOD= DATEADD(DD,-1,@v_FIRSTPERIOD) --v_FIRSTPERIOD - 1;
SET @v_CLOSINGSECONDPERIOD=  DATEADD(DD,-1,@v_CURRENTDATE)--v_CURRENTDATE - 1;
SET @v_CLOSINGFIRSTPERIOD= EOMONTH(@v_FIRSTPERIOD);

DELETE FROM DATAMARTS_CORPORATE.AGG_MOVEMENTS WHERE DATE_KEY >= @v_FIRSTPERIOD ;

INSERT INTO DATAMARTS_CORPORATE.AGG_MOVEMENTS
SELECT 
F.DS
, NULL ETL_ID
, @UAEDATE INSERT_DATETIME
, @UAEDATE UPDATE_DATETIME
--, dbo.DATE_TRUNC('MONTH',F.TRANSACTION_DATE) DATE_KEY
, DATEADD(MONTH, DATEDIFF(MONTH, 0, F.TRANSACTION_DATE), 0) DATE_KEY
, F.PRODUCT_KEY
, F.PRODUCT_COMBO_KEY
, F.MOP_KEY
, F.SUBSCRIBER_COUNTRY_KEY COUNTRY_KEY
, F.HWPROFILE_KEY
, F.INVOICEPERIOD_KEY
, F.MARKETSEGMENT_KEY MARKET_SEGMENT_KEY
, CASE WHEN T.SUBSCRIBER_TYPE_NAME IN ('Bulk DTH Tenants','Bulk DTH Landlord') THEN 'E' 
	   WHEN UPPER(T.SUBSCRIBER_TYPE_NAME) IN ('OSN RETAIL') THEN 'R' 
	   WHEN UPPER(T.SUBSCRIBER_TYPE_NAME) IN ('KEY ACCOUNTS') THEN 'K' 
	   WHEN T.SUBSCRIBER_TYPE_NAME IN ('OSN Lite') THEN 'L' 
	   WHEN T.SUBSCRIBER_TYPE_NAME IN ('DTH Stream App') THEN 'S'
	   ELSE 'D' END SUBSCRIBER_TYPE_SR_KEY
, SUM(NEW_SALES) SALES
, SUM(NET_CHURN) CHURN
, F.DEPOT_KEY
, F.SALESPERSON_KEY
FROM 
EDWH_FACT.FACT_PRODUCT_MOVEMENT F JOIN EDWH_DIM.DIM_LKUP_PRODUCT P ON F.PRODUCT_KEY = P.PRODUCT_KEY
JOIN EDWH_DIM.DIM_LKUP_SUBSCRIBER_TYPE T ON F.SUBSCRIBER_TYPE_KEY = T.SUBSCRIBER_TYPE_KEy
JOIN EDWH_DIM.DIM_LKUP_FINANCE_OPTION O ON F.FINOPTION_KEY = O.FINANCE_OPTION_KEY
JOIN EDWH_DIM.DIM_LKUP_MOVEMENT M ON F.MOVEMENT_KEY = M.MOVEMENT_KEY
WHERE
O.FINANCE_OPTION_NAME <> 'Free'
AND ((P.PRODUCT_GRP_1 = 'Active Base' AND T.SUBSCRIBER_TYPE_GRP_1 = 'Paying') 
OR (P.PRODUCT_DESCRIPTION = 'Yalla OSN' AND T.SUBSCRIBER_TYPE_NAME = 'OSN Lite'))
AND M.MOVEMENT_GRP_1 IN ('Net Churn','Net Sales')
AND F.TRANSACTION_DATE BETWEEN @v_FIRSTPERIOD AND DATEADD(D,DATEDIFF(D,0,@UAEDATE),0) - 1
AND F.SUBSCRIBER_KEY NOT IN
(
	601689761,
	601694251,
	601812011,
	601812841,
	601813001,
	601813821,
	601814171,
	601814261,
	601814351,
	601814441,
	601814531,
	601815151,
	601815241,
	601815511,
	601815701,
	601816221,
	601816311,
	601816401,
	601816501,
	601816691,
	601974801,
	602168571
)
GROUP BY 
F.DS
--, dbo.DATE_TRUNC('MONTH',F.TRANSACTION_DATE) 
, DATEADD(MONTH, DATEDIFF(MONTH, 0, F.TRANSACTION_DATE), 0)
, F.PRODUCT_KEY
, F.PRODUCT_COMBO_KEY
, F.MOP_KEY
, F.SUBSCRIBER_COUNTRY_KEY
, F.HWPROFILE_KEY
, F.INVOICEPERIOD_KEY
, F.MARKETSEGMENT_KEY 
, CASE WHEN T.SUBSCRIBER_TYPE_NAME IN ('Bulk DTH Tenants','Bulk DTH Landlord') THEN 'E' 
		WHEN UPPER(T.SUBSCRIBER_TYPE_NAME) IN ('OSN RETAIL') THEN 'R' 
		WHEN UPPER(T.SUBSCRIBER_TYPE_NAME) IN ('KEY ACCOUNTS') THEN 'K' 
		WHEN T.SUBSCRIBER_TYPE_NAME IN ('OSN Lite') THEN 'L' 
		WHEN T.SUBSCRIBER_TYPE_NAME IN ('DTH Stream App') THEN 'S'
		ELSE 'D' END 
, F.DEPOT_KEY
,F.SALESPERSON_KEY;

INSERT INTO DATAMARTS_CORPORATE.AGG_MOVEMENTS
SELECT 
F.DS
, NULL ETL_ID
, @UAEDATE INSERT_DATETIME
, @UAEDATE UPDATE_DATETIME
--, dbo.DATE_TRUNC('MONTH',F.DATE_KEY) DATE_KEY
, DATEADD(MONTH, DATEDIFF(MONTH, 0, F.DATE_KEY), 0) DATE_KEY
, -1 PRODUCT_KEY
, -1 PRODUCT_COMBO_KEY
, -1 MOP_KEY
, F.COUNTRY_KEY
, -1 HWPROFILE_KEY
, -1 INVOICE_PERIOD_KEY
, -1 MARKET_SEGMENT_KEY
, SUBSCRIBERTYPE SUBSCRIBER_TYPE_SR_KEY
, SUM(NEWSALES) SALES
, SUM(NETCHURN) CHURN
, -1 DEPOT_KEY
, -1 SALESPERSON_KEY
FROM DATAMARTS_SALES.AGG_SALESREPORT_CAB_MOVE F
WHERE F.DATE_KEY  BETWEEN @v_FIRSTPERIOD AND DATEADD(D,DATEDIFF(D,0,@UAEDATE),0) - 1
GROUP BY 
F.DS
, udo.DATE_TRUNC('MONTH',F.DATE_KEY) 
, DATEADD(MONTH, DATEDIFF(MONTH, 0, F.DATE_KEY), 0)
, F.COUNTRY_KEY
, F.SUBSCRIBERTYPE;

INSERT INTO DATAMARTS_CORPORATE.AGG_MOVEMENTS
SELECT 
F.DS
, NULL ETL_ID
, @UAEDATE INSERT_DATETIME
, @UAEDATE UPDATE_DATETIME
--, dbo.DATE_TRUNC('MONTH',F.DATE_KEY) DATE_KEY
, DATEADD(MONTH, DATEDIFF(MONTH, 0, F.DATE_KEY), 0) DATE_KEY
, -1 PRODUCT_KEY
, -1 PRODUCT_COMBO_KEY
, -1 MOP_KEY
, F.COUNTRY_KEY
, -1 HWPROFILE_KEY
, -1 INVOICE_PERIOD_KEY
, -1 MARKET_SEGMENT_KEY
, SUBSCRIBERTYPE SUBSCRIBER_TYPE_SR_KEY
, SUM(NEWSALES) SALES
, SUM(NETCHURN) CHURN
, -1 DEPOT_KEY
, -1 SALESPERSON_KEY
FROM DATAMARTS_SALES.AGG_SALESREPORT_COM_MOVE F
WHERE F.DATE_KEY  BETWEEN @v_FIRSTPERIOD AND DATEADD(D,DATEDIFF(D,0,@UAEDATE),0) - 1
GROUP BY 
F.DS
--, dbo.DATE_TRUNC('MONTH',F.DATE_KEY)
, DATEADD(MONTH, DATEDIFF(MONTH, 0, F.DATE_KEY), 0) 
, F.COUNTRY_KEY
, F.SUBSCRIBERTYPE;
END;
GO
